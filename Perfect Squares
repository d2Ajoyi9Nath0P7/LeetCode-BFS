void solve(TreeNode* root)
{
    if(root == NULL)
    {
        return;
    }
    solve(root->left);
    solve(root->right);

    TreeNode* temp = root->left;
    root->left = root->right;
    root->right = temp;
}

TreeNode* invertTree(TreeNode* root)
{
    if(root == NULL)
    {
        return root;
    }
    solve(root);

    return root;
    int solve(int n,vector<int>&dp)//4
    {
        if(n <= 3)
        {
            return n;
        }
        if(dp[n] != -1)
        {
            return dp[n];
        }
        int minV = n;
        for(int i = 1 ; i*i <= n; i++)//(2*2 <= 4)
        {
            minV = min(minV,solve(n - (i*i),dp) + 1);//(3)
        }
        return dp[n] = minV;
    }

    int numSquares(int n)
    {
        vector<int>dp(n+1,-1);
        return solve(n,dp);
    }
